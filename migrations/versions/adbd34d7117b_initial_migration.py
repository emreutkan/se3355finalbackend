"""Initial migration

Revision ID: adbd34d7117b
Revises: 
Create Date: 2025-06-28 19:47:30.008519

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'adbd34d7117b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actors',
    sa.Column('id', app.models.GUID(), nullable=False),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('photo_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('actors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_actors_full_name'), ['full_name'], unique=False)

    op.create_table('movies',
    sa.Column('id', app.models.GUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('original_title', sa.String(length=255), nullable=True),
    sa.Column('year', sa.SmallInteger(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('imdb_score', sa.Numeric(precision=3, scale=1), nullable=True),
    sa.Column('trailer_url', sa.Text(), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.Column('runtime_min', sa.SmallInteger(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('language', sa.String(length=30), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('imdb_score >= 0 AND imdb_score <= 10', name='valid_score'),
    sa.CheckConstraint('year >= 1888', name='valid_year'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('movies', schema=None) as batch_op:
        batch_op.create_index('idx_movies_title_search', ['title'], unique=False)
        batch_op.create_index('idx_movies_year', ['year'], unique=False)
        batch_op.create_index(batch_op.f('ix_movies_title'), ['title'], unique=False)

    op.create_table('users',
    sa.Column('id', app.models.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=False),
    sa.Column('city', sa.String(length=80), nullable=False),
    sa.Column('photo_url', sa.Text(), nullable=True),
    sa.Column('auth_provider', sa.Enum('local', 'google', name='auth_provider_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('movie_actors',
    sa.Column('movie_id', app.models.GUID(), nullable=False),
    sa.Column('actor_id', app.models.GUID(), nullable=False),
    sa.Column('order_index', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['actors.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'actor_id')
    )
    op.create_table('popularity_snapshots',
    sa.Column('movie_id', app.models.GUID(), nullable=False),
    sa.Column('snapshot_date', sa.Date(), nullable=False),
    sa.Column('score', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('rank', sa.SmallInteger(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'snapshot_date')
    )
    op.create_table('ratings',
    sa.Column('id', app.models.GUID(), nullable=False),
    sa.Column('movie_id', app.models.GUID(), nullable=False),
    sa.Column('user_id', app.models.GUID(), nullable=False),
    sa.Column('rating', sa.SmallInteger(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('voter_country', sa.String(length=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 10', name='valid_rating'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ratings', schema=None) as batch_op:
        batch_op.create_index('idx_rating_country', ['voter_country'], unique=False)
        batch_op.create_index('idx_rating_movie_user', ['movie_id', 'user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ratings_movie_id'), ['movie_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ratings_user_id'), ['user_id'], unique=False)

    op.create_table('watchlist',
    sa.Column('user_id', app.models.GUID(), nullable=False),
    sa.Column('movie_id', app.models.GUID(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'movie_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('watchlist')
    with op.batch_alter_table('ratings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ratings_user_id'))
        batch_op.drop_index(batch_op.f('ix_ratings_movie_id'))
        batch_op.drop_index('idx_rating_movie_user')
        batch_op.drop_index('idx_rating_country')

    op.drop_table('ratings')
    op.drop_table('popularity_snapshots')
    op.drop_table('movie_actors')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('movies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_movies_title'))
        batch_op.drop_index('idx_movies_year')
        batch_op.drop_index('idx_movies_title_search')

    op.drop_table('movies')
    with op.batch_alter_table('actors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_actors_full_name'))

    op.drop_table('actors')
    # ### end Alembic commands ###
